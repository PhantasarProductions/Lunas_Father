// License Information:
// src/Scripts/Script/Use/General/UseIAA.scyndi
// Version: 23.11.05
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "Libs/SCI/InterVar" 
#use "Libs/SCI/GINIE"

const var ItemCap = NewArray(100,50,10)

plua _iaareg = {}
plua _iaameta = {}

plua invclass  = GINIE.LoadNew("Data/IAA/MyData_ClassFile_IAA.ini","INVENTORY_CLASS")
plua inventory = GINIE.CreateNew("INVENTORY")

plua _giveitem
bool IAA_GIVE(int i=1)
	if Inventory.IntValue("Have",_GiveItem)+i>ItemCap[gint.Skill]
		Return False
	End
	Inventory.Value("Have",_GiveItem,Inventory.IntValue("Have",_GiveItem)+i)
	Return True
End

var IAA_IDX(s,string key)
	string ikey
	plua idat
	string rtag
	ikey = s["*_key_*"]
	idat = s["*_dat_*"]
	key = Upper(key)
	rtag = sprintf("REC:%s",iKey)
	switch key
		case "HAVE" "NUM"
			return math.min(ItemCap[gint.skill],Inventory.IntValue("Have",ikey))
		case "GIVE"
			_giveitem = iKey
			return IAA_GIVE
		Default
			switch upper(invclass.Value("Class",Upper(key)))
				case "STRING"
					return idat.Value(rtag,key)
				case "INT"
					return idat.IntValue(rtag,key)
				case "BOOLEAN"
					return idat.BoolValue(rtag,key)
				case ""
					Lua.error(sprintf("Non-existent IAA field (GET) (%s)",key))
				default
					Lua.error(sprintf("Keytype error in IAA (GET) (%s %s)",invclass.Value("Class",Upper(key)),key))
			End
		// Switch
	End
end

void IAA_NEWIDX(s,string key,value)
	string ikey
	plua idat
	string rtag
	ikey = s["*_key_*"]
	idat = s["*_dat_*"]
	key = Upper(key)
	rtag = sprintf("REC:%s",iKey)
	switch key
		case "HAVE" "NUM"
			//Inventory.Value(Inventory.IntValue("Have",ikey,math.min(ItemCap,value)))
			Inventory.Value("Have",ikey,Lua.tostring(math.min(ItemCap[gint.skill],value)))
		case "GIVE"
			_giveitem = iKey
			IAA_GIVE(iKey)
			// I'd not recommand to go this way, though.
		Default
			idat.Value(rtag,key,Value)
	End
end

QuickMeta IAA
	index
		key = Upper(key)
		switch Key
			Case "LIST"
				return Inventory.Values("Have")
			Case "FIELDS" 
				return invclass.Values("Class")				
			Default
				_iaareg[key] = _iaareg[key] || GINIE.LoadNew(sprintf("Data/IAA/%s.INI",key),sprintf("IAA_%s",key))
				_iaameta[key] = _iaameta[key] || SetMetaTable({["*_dat_*"]=_iaareg[key],["*_key_*"]=key},{["__index"]=IAA_IDX,["__newindex"]=IAA_NEWIDX})
				Return _iaameta[key]
		End		
	end
	
	newindex
		Lua.error("IAA's  fields are READ ONLY!")
	end
	
End