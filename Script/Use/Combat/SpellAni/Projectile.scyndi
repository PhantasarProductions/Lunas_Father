// License Information:
// src/Scripts/Script/Use/Combat/SpellAni/Projectile.scyndi
// Version: 23.12.11
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "Libs/SCI/Sys"
#use "Libs/SCI/Graphics"

PLUA _Pics = {}

Class TProjectile

	Static Int IDM = 0
	ReadOnly Int ID 

	ReadOnly Var Pic
	ReadOnly Int SX
	ReadOnly Int SY
	ReadOnly Int EX
	ReadOnly Int EY
	ReadOnly Int Frames
	ReadOnly Var Executor
	ReadOnly Var Target
	
	ReadOnly Number GX
	ReadOnly Number GY
	Int Frame
	Int Rotating
	Int Deg = 0
		
	Get Int X; Return math.floor(GX*Frame)+SX; End
	Get Int Y; Return math.floor(GY*Frame)+SY; End
		
	Static Var First = Nil	
	Static Var Last = Nil
	Var Next = Nil
	Var Prev = Nil
		

	Constructor(String WPic,Exe,Tgt,Frms,int Rot = 0)
		//print("Project constructor:",WPic,Exe,Tgt,Frms,Rot)
		Plua UPic;UPic = Upper(WPic)
		_Pics[UPic] = _Pics[UPic] || LoadNewImage(WPic,"SPELLANI_PROJECTILE_"..UPic) 
		Pic = _Pics[UPic]
		Executor = Exe
		Target = Tgt
		Frames=Frms
		SX = Exe.X
		SY = Exe.Y - (Exe.H div 2)
		EX = Tgt.X
		EY = Tgt.Y - (Tgt.H div 2)
		GX = (EX-SX) / Frames
		GY = (EY-SY) / Frames
		Frames = Frms
		Rotating = Rot
		IDM++
		ID = IDM
		CSayF("Created projectile #%08x",ID)
	End
	
	Destructor
		CSayF("Destroyed projectile #%08x",ID)
	End
	
	Void Draw()
		Frame ++
		Deg = Deg + Rotating
		SetColor(255,255,255,255)
		//SetRotation(Deg)
		Pic.DrawR(X,Y,Deg)
		//SetRotation(0)
		If Frame>=Frames
			If Prev;Prev.Next = Next; Else; First = Next; End
			If Next;Next.Prev = Next; Else; Last = Prev; End
			Prev = nil
		End
	End
	
End

Global Void NewProjectile(String Pic,Exe,Tgt,Frms,Int Rot = 0)
	Plua P; P = new TProjectile(Pic,Exe,Tgt,Frms,Rot)
	If (TProjectile.First)
		CSayF("Adding a projectile")
		TProjectile.Last.Next = P
	Else
		CSayF("Creating first projectile")
		TProjectile.First = P		
	End
	TProjectile.Last = P
End

Global Get Int CountProjectiles
	Plua P = TProjectile.First
	Int Ret = 0
	While P
		Ret++
		P = P.Next
	End
	Return Ret
End

Global Get Bool ProjectilesLeft
	Return TProjectile.First!=Nil
End

Global Bool CycleProjectiles()
	Plua P = TProjectile.First
	While P
		P.Draw()
		P=P.Next
	End
	Return ProjectilesLeft
End