// License Information:
// src/Scripts/Script/Use/Combat/SpellEffect/EFFECT_Eat.scyndi
// Version: 24.01.26
// Copyright (C) 2024 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

Module

#use "Libs/SCI/Sys"
#use "Libs/SCI/InterVar"

#use "Script/Use/Link/Party"

#use "Script/Flow/FlowCombat/CharMsg"

Void WideEffect(Executor,Targets,String Param)
End


// Effect for single target (when there are multiple targets this function
// will be called once for each target). 'True' denotes the effect was 
// succesful and 'False' will denote a miss.
Bool Effect(Executor,Target,String Param)
	Int ExLoss; ExLoss = Executor.MaxHP - Executor.HP
	Int TarHP;  TarHP  = Target.HP
	If gint.skill!=3;TarHP--;End
	Int Drain; Drain = math.min(ExLoss,TarHP)
	If Drain<=0; Return False; End		
	Executor.Char.Points.HP.Maximum = math.max(gint.skill,Executor.Char.Points.HP.Maximum-(3-gint.skill)) 
	CharMsg.Put(Target,  Drain)
	CharMsg.Put(Executor,Drain,180,255,0)
	Executor.HP = Executor.HP + Drain
	Target.HP = Target.HP - Drain
	CSayF("After eating %s has %d of %d HP",Executor.Name,Executor.Char.Points.HP.Have,Executor.Char.Points.HP.Maximum)
	If Target.Team=="Hero"
		// The "if" check should not be needed, but is a safety precaution
		Party.SkillExpUp(Target.Tag,1,Drain * (4-gint.skill))
		Party.SkillExpUp(Target.Tag,2,Drain * (4-gint.skill))
		Target.irate = Target.irate + 4-gint.skill 
		Target.Char.Points.VIT.Have++
	End
	Return True
End