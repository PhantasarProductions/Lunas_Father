// License Information:
// src/Scripts/Script/Use/Link/Combat.scyndi
// Version: 23.11.16
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "libs/sci/sys"
#use "libs/sci/audio"
#use "libs/sci/events"
#use "libs/sci/graphics"

#use "libs/xmath"
#use "libs/music"

#use "script/use/general/loading"


plua BossAudio
plua BHF = ObtainFont("BIGTEXT")
plua BBF = ObtainFont("VBGTEXT")

QuickMeta CombatData
	index
		lua.error("CombatData is Write-Only!")
	end
	newindex
		switch Upper(key)
			case "MUSIC"
				CSayF("Music for combat: %s",value)
				Sys.Call("FLOW_COMBAT","DefineStartValue","CMusic",value)
			default
				CSayF("Setting combat start value %s to %s",key,value)
				Sys.Call("FLOW_COMBAT","DefineStartValue",key,value)
		end
	end
end

Const Number PLineInt=0.50
	
Get Int MidX
	Return Graphics.Width div 2
End
Get Int MidY
	Return Graphics.Height div 2
End
Get Int Radius
	Return math.max(Graphics.Width,Graphics.Height)
End

Set String Arena
	CombatData.Arena = value
End

void PrepareCombat(string BossHead,string BossName,byte R,Byte G, Byte B)
		Number AlphaH=0
		Number AlphaB=0
		//Static Var BossAudio
		//Static Var BHF = ImageFont.Obtain("BIGTEXT")
		//Static Var BBF = ImageFont.Obtain("VBGTEXT")
		//Bool BossPlaying()
		//	If BossHead==""
		//		Return False
		//	End
		//	Return AlphaH<1 && AlphaB<1 && BossAudio && BossAudio.Playing
		//	//lua.error("No music timing for boss yet!")
		//End
		Int Time = 20
		Int m = 360-math.random(0,125)
		Int BossChan 
		If BossHead!=""
			Time = 150
			CSay("Prepare boss combat!")
			Music.Push()
			BossAudio = BossAudio || Audio.LoadNew("Audio/Combat/Boss Intro.ogg","BOSS_INTRO")
			//Lua.Scyndi.Globals.Music.Stop()
			Music.Stop()
			//Music.Play("Music/Sys/Silence.ogg")
			BossChan = BossAudio.Play()			
		End
		
		Bool BossPlaying
		Repeat	
			BossPlaying=False
			Graphics.Cls()
			For li = 0,360,PLineInt
				//number ci = math.abs(xmath.Cos(li+((FPS.Ticks div 10) % 360)))
				number ci;ci = math.abs(xmath.Cos(li+Time+m))
				Graphics.Color(math.floor(R*ci),math.floor(G*ci),math.floor(B*ci))
				Graphics.Line(MidX,MidY,MidX+math.floor(xmath.sin(li)*Radius),MidY+math.floor(xmath.cos(li)*radius))
			End
			Time--
			if BossHead!=""
				BossPlaying = AlphaH<1 && AlphaB<1
				Graphics.Color(255,255,255)
				AlphaH = math.min(1,AlphaH+0.1)
				if AlphaH==1
					AlphaB = math.min(1,AlphaB+0.029)
				end
				SetAlpha(math.floor(AlphaH*255))
				If AlphaH>=1
					BHF.Dark(BossHead,Graphics.Width div 2, (Graphics.Height div 2) - 20 , 2, 0)
				Else
					BHF.Text(BossHead,Graphics.Width div 2, (Graphics.Height div 2) - 20 , 2, 0)
				End
				SetAlpha(math.floor(AlphaB*255))
				If AlphaB>=1
					BBF.Dark(BossName,Graphics.Width div 2, (Graphics.Height div 2) + 20 , 2, 0)
				Else
					BBF.Text(BossName,Graphics.Width div 2, (Graphics.Height div 2) + 20 , 2, 0)
				End
				SetAlpha(255)
				//If !Audio.Playing(BossChan)
				//	Time = 0
				//End
			End
			Flip()
			Events.Poll()
			//FPS.WaitMinTicks()
			//printf("Time:%03d; BossPlaying: %s; ChannelPlaying(%d): %s\n",Time,BossPlaying,BossChan,Audio.Playing(BossChan))	
		LoopWhile Time>0 || BossPlaying
		Loading.Show()
		Sys.LoadNewState("FLOW_COMBAT","Script/Flow/Flow_Combat.lbc")
		If BossHead!=""
			//ISSet("BOOL","FLOW_COMBAT","FlowCombat.Start.Music_DontPush",true)
			CombatData.Music_DontPush = 1
		End
		Sys.Call("FLOW_COMBAT","StartPreparations")
		CombatData.StartEvent=""	
End
	
Void Prepare()
	PrepareCombat("","",0,180,255)
End
	
Void Boss(string Head,string Name, Byte EFR=255, Byte EFG=0, Byte EFB=0)
	PrepareCombat(Head,Name,EFR,EFG,EFB)
End

Void Start()
	Sys.Call("FLOW_COMBAT","StartCombat")
	GoToFlow("COMBAT")
End