// License Information:
// src/Scripts/Script/Flow/FlowMenu/Tabs/Alchemy_Extract.scyndi
// Version: 23.12.30
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "Libs/SCI/Sys"
#use "Libs/SCI/Graphics"
#use "Libs/SCI/InterVar"

#use "Libs/Rosetta"
#use "Libs/MultiPointer"

#use "Script/Use/Link/Party"
#use "Script/Use/Link/Alchemy"

#use "Script/Use/General/UseIAA"

ReadOnly Var Fnt = ObtainFont("BASE")
String EAS 
Int EAW
Int Hue

Init
	EAS = Rosetta.GetStr("ALCHEMY","ALL")
	if EAS==""
		CSay("For some odd reason the Extract All string is empty")
		EAS = "EXTRACT ALL"
	End
	EAW = Fnt.Width(EAS)
	CSayF("EAS: %s; EAW: %d",EAS,EAW)
End

Void ExtractAll()
	plua ic;ic=Lua.Scyndi.Class.Field_Inventory
	For mnmnt in Each(Alchemy.Manaments)
		For i=1,20
			String Tag;Tag = sprintf("INGREDIENT_MANAMENT_%s_TIER_%d",mnmnt,i)
			while IAA[Tag].Have>0 && ic._AllowExtract("Francis",Tag) && Mana[mnmnt]<Alchemy.MaxMana
				ic._Extract("Francis",Tag)
			End
		End
	End
End

Void Flow(string _Situation,string CharTag,int bx, int by, int ex, int ey)
	Lua.Scyndi.Class.Inventory.Flow("ALCHEMY","Francis",bx,by,ex,ey)
	// Extract All
	if MX<bx && MX>bx-EAW && MY>ey-90 && MY<ey-60
		Hue = (Hue+1) % 360
		SetColorHSV(Hue,1,1)
		if ML && Sys.Yes(Rosetta.GetStr("ALCHEMY","ALL_CONFIRM" )); ExtractAll(); End		
	Else
		SetColor(255,255,255)
	End
	Fnt.Text(EAS,bx,ey-90,1)
End