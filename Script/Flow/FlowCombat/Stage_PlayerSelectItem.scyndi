// License Information:
// src/Scripts/Script/Flow/FlowCombat/Stage_PlayerSelectItem.scyndi
// Version: 23.11.08
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
module

#use "Libs/SCI/Sys"
#use "Libs/SCI/Graphics"

#use "Script/Flow/flowCombat/Stage"
#use "Script/Flow/flowCombat/Action_Class"


#use "Script/Flow/FlowMenu/Tabs/Inventory"

#region "Assets"
ReadOnly Var Fnt = ObtainFont("BASE")
ReadOnly Int PINVX = 10
ReadOnly Int PINVY = 50
ReadOnly Int PINVW = Graphics.Width-20
ReadOnly Int PINVH = Graphics.Height-250
Int Hue = 0
#endregion

#region "Situation variables"
String ItemSituation
String PlayTag
Bool IsMystic
Var Player
#endregion




#region "Inventory settings"

Void _Action(string User,string _Item)
	CSayF("%s => Request to use item %s",User,_Item)
	plua Act;Act = new Action(User,_Item,{["Extended"]=IsMystic})
	Lua.Scyndi.Globals.PlayerSelectTarget(User,Act)
End


Bool _Allow(string User,string Item)
	Return MyItem[Item].Item.Usable_In_Combat
End


Init
	plua n
	//print("Init Combat Inventory",_Action,_Allow)
	n = new InvSit("Combat_UseItem",_Action,_Allow)
	n.AddFilter("Consumable")
	n = new InvSit("Combat_MysticItem",_Action,_Allow)
	n.AddFilter("Consumable")
End
#endregion

#region "Come To Me" 
Global Void PlayerToUseItem(string PlTag)
	ItemSituation="Combat_UseItem"
	PlayTag = PlTag
	IsMystic = False
	Player = Lua.Scyndi.Class.Fighter.ByTag[PlTag]
	Stage.CurrentTag = "PMITEMS"
End

Global Void PlayerToMysticItem(string PlTag)
	ItemSituation="Combat_MysticItem"
	PlayTag = PlTag
	IsMystic = True
	Player = Lua.Scyndi.Class.Fighter.ByTag(PlTag)
	Stage.CurrentTag = "PMITEMS"
End

#endregion



#region "Basic callbacks"



Void Arrive(); End
	
Void Cycle()
	SetColor(255,255,255)
	Fnt.Text(Player.Name,PINVX,PINVY,0,1)
	If IsMystic
		Hue = (Hue+1) % 360
		SetColorHSV(Hue,1,1)
		Fnt.Text("Mystic",PINVX+PINVW,PINVY,1,1)
	End
	SetColor(0,0,0,100)
	Rect(PINVX,PINVY,PINVW,PINVH)
	SetColor(255,255,255,255)
	Inventory.Flow(ItemSituation,PlayTag,PINVX,PINVY,PINVW,PINVH)
End

Init
	Stage.Register("PMITEMS",Stage_PlayerSelectItem)	
End
#endregion