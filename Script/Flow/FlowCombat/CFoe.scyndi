// License Information:
// src/Scripts/Script/Flow/FlowCombat/CFoe.scyndi
// Version: 23.10.27
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "Libs/SCI/Sys"
#use "libs/sci/GINIE"
#use "libs/sci/SString"
#use "libs/sci/Graphics"
#use "libs/sci/InterVar"
#use "libs/sci/statistician"

#use "script/use/link/party"

plua LoadedFoes
plua FParty = Statistician.Obtain("LUNA_PARTY")

plua minifnt = ObtainFont("MINI")
	
Const Int DrawTypes_Neg = 0
Const Int DrawTypes_Flp = 1
Const Int DrawTypes_Ani = 2

plua FoeImageRegister 

plua FoeImage(string pic)
	plua T;T = "COMBAT_FOE::"..Upper(pic)
	FoeImageRegister = FoeImageRegister || {}
	FoeImageRegister[T] = FoeImageRegister[T] || LoadNewImage(Pic,T)
	Return FoeImageRegister[T]
End
	

Class Foe
	ReadOnly String Tag
	ReadOnly Int IDNum
	ReadOnly Int CardAlphaNum
	ReadOnly Var RawData
	ReadOnly Var Char
	ReadOnly Var Stat	
	ReadOnly String Team = "Foe"
		
	Get Int DrawType
		Return RawData.IntValue("MetaData","DrawType")
	End
	
	Get Int Red; Return RawData.IntValue("Color","Red"); end
	Get Int Green; Return RawData.IntValue("Color","Green"); end
	Get Int Blue; Return RawData.IntValue("Color","Blue"); end
	
	Bool Gone = False
	Bool Killed = False 
	Bool Guarding = False
		
	Get Bool Drawable
		// TODO: When removed due to kill there must also be a thing here
		Return !Gone
	End
		
	Get Bool TargetablePlayer
		Return HP>0 && (!Gone)
	End
	
	Get Bool TargetableFoe
		Return TargetablePlayer
	End
		
	Get String FoeFile
		return RawData.Value("INGAME","FoeFile")
	End
	
	Get String ImageFile
		Return RawData.Value("MetaData","Image")
	End
		
	Get Bool ShowHPBar
		Switch gint.skill
			case 1
				return true
			case 2
				return gint[sprintf("Killed.%s",FoeFile)]>0
			case 3
				return false
			default
				return false
		end
	End
		
	Get Int Force
		// Actual code will come later when skills have been added
		return 0
	End
		
	Int DOrder
		
	Int X
	Int Y
		
	Get Int HP
		Return Char.Points.HP.Have
	End
	Set Int HP
		Char.Points.HP.Have = Value
	End
	Get Int MaxHP
		Return Char.Points.HP.Maximum
	End
	
	Bool Flipped = False
	Int Frame = 0
	Var Images
	
	Void Draw()		
		If !Drawable
			Return
		End
		RawData.NewValue("XIMG","Scale","1000")
		SetScale(RawData.IntValue("XIMG","Scale")/1000)
		SetColor(Red,Green,Blue)
		Switch DrawType
			Case 0
				Images = Images || {}
				Images[true] = Images[true] || FoeImage(StripExt(ImageFile)..".Negative.png")
				Images[false] = Images[false] || FoeImage(ImageFile)
				Images[Flipped].Draw(X,Y)
			Case 1
				Images = Images || {}
				Images[true] = Images[true] || FoeImage(StripExt(ImageFile)..".Flipped.png")
				Images[false] = Images[false] || FoeImage(ImageFile)
				Images[Flipped].Draw(X,Y)
			case 3
				Lua.error("Fully animated not yet supported")
			default
				Lua.error(sprintf("DrawType #4 not (yet?) known",DrawType))
		End
	End

	
	Void Icon(int x, int y)
		minifnt.Text(Chr(64-CardAlphaNum),x,y)
	End
	
	Constructor(int _IDNum,_RawData)
		IDNum = _IDNum
		CardAlphaNum = (_IDNum % 26) + 1
		Tag = sprintf("FOE_%03d",_IDNum); CSayF("Created Foe record '%s' at %d",Tag,IDNum)
		RawData = _RawData
		FParty.NewChar(Tag,RawData.Value("METADATA","NAME"))
		Char = FParty.Char[Tag]
		plua StatTag=sprintf("STAT%d",gint.Skill)
		For st in Each(Party.BaseStats)
			Char.Stat[st] = RawData.IntValue(StatTag,st)
		End
		Stat = Char.Stat
		Char.Points.HP.MaxCopy = "HP"
		Char.Points.HP.Have = Char.Points.HP.Maximum
	End
End


Void CompileFoe(int FID,FoeData)
	CSayF("Compiling Foe #%d",FID)
	string FoeFile; FoeFile=FoeData.Foe
	string UFoeFile; UFoeFile=Upper(FoeFile)
	string EntryFile; EntryFile = sprintf("Data/Combat/Foes/%s.ini",FoeFile)
	LoadedFoes = LoadedFoes || {}
	LoadedFoes[UFoeFile] = LoadedFoes[UFoeFile] || GINIE.Load(EntryFile,"FOE_"..UFoeFile)
	PLUA Raw;Raw = LoadedFoes[UFoeFile]
	Raw.Value("INGAME","FoeFile",FoeFile)
	PLUA NF; NF = new Foe(FID,Raw)
	NF.X = FoeData.X
	NF.Y = FoeData.Y
	Lua.Scyndi.Class.Fighter.ByTag[NF.Tag] = NF
End