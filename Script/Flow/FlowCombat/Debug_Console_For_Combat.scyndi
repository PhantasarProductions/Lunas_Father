// License Information:
// src/Scripts/Script/Flow/FlowCombat/Debug_Console_For_Combat.scyndi
// Version: 23.12.17
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "Libs/SCI/Sys"

#use "Script/Flow/FlowCombat/Fighter"
#use "Script/Flow/FlowCombat/Status_Change_Manager"


Global Void CMBT_DEBUG_DIAMONDS()
	for i,v in spairs(Lua.Scyndi.Class.Diamonds.Slots)
		printf("Slot #%05d> X=%d; ToX=%d; Type=%s; ",i,v.X,v.ToX,v.Type)
		switch(v.Type)
			case "PLAYER" "FOE"
				printf("FighterTag = %s; ",v.FighterTag)
			case "JOKER"
				printf("Joker; ")
			case "BACK"
				printf("Inactive; ")
			default
		end
		printf("\n")
	end
End

Global Void CMBT_DEBUG_HP()
	plua f;f=Lua.Scyndi.Class.Fighter
	For t,tl in pairs(f.Team)
		printf("\x1b[38;5;11m\x1b[44m%s\x1b[0m\n",t)
		For ft,fd in spairs(tl)
			printf("%9s has %4d/%4d hitpoints\n",ft,fd.HP,fd.MaxHP)
			If fd.Defeated
				print("==> Is Defeated!")
			End
		End
		If Defeated[t]
			print("==> This entire team has been defeated!")
		End
	End
End

Global Void CMBT_DEBUG_STATUS()
	plua f;f=Lua.Scyndi.Class.Fighter
	For t,tl in pairs(f.Team)
		printf("\x1b[38;5;11m\x1b[44m%s\x1b[0m\n",t)
		For ft,fd in spairs(tl)
			printf("%s:\n",ft)
			For st,_ in spairs(fd._Status)
				printf(" => %s\n",st)
			End
		End
	End
End

Global Void CMBT_DEBUG_SetStatus(tar,status)
	CSayF("SetStatus(\"%s\",\"%s\")",tar,status)
	If Lua.type(tar)!="string" || Lua.type(status)!="string"
		printf("\x1b[31m;Error! \x1b[37mIllegal parameters\n")
		Return
	End
	Switch Upper(Tar)
		Case "ALL" "EVERYBODY"
			For f,_ in pairs(Fighter.ByTag); CMBT_DEBUG_SetStatus(f,status); End
		Case "HERO" "FOE"
			for f,_ in pairs(Fighter.Team[Tar]); CMBT_DEBUG_SetStatus(f,status); End
		Default
			If !Fighter.ByTag[Tar]
				printf("\x1b[31m;Error! \x1b[37mNo fighter tagged '%s'!\n",tar)
				Return
			End
			If !StatusExists(Status)
				printf("\x1b[31m;Error! \x1b[37mNo data about status '%s'!\n",status)
			End
			Fighter.ByTag[Tar].StatusChanges[Status] = true
			printf("\x1b[37m Fighter \x1b[36m%s\x1b[37m now has status \x1b[35m%s\x1b[37m\n",tar,status) 
	End
End

Init
	Sys.ConsoleLocal("DIAMONDS","CMBT_DEBUG_DIAMONDS")
	Sys.ConsoleLocal("HP","CMBT_DEBUG_HP")
	Sys.ConsoleLocal("SETSTATUS","CMBT_DEBUG_SETSTATUS")
	Sys.ConsoleLocal("GETSTATUS","CMBT_DEBUG_STATUS")
End