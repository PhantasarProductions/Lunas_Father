// License Information:
// src/Scripts/Script/Flow/FlowCombat/CharMsg.scyndi
// Version: 23.10.30
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "Libs/SCI/Graphics"

#use "Script/Flow/FlowCombat/Fighter"

ReadOnly Var Fnt = ObtainFont("MINI")
plua register

Init
	register = {}
End
	

Class TCharMsg
	Int X
	Int y
	Readonly Int StartY
	ReadOnly Byte R
	ReadOnly Byte G
	ReadOnly Byte B
	Int Alpha = 255
	Int ACD = 20
	ReadOnly String Message
	ReadOnly String Tag	
	
	Void Draw(noalterations)
		SetColor(R,G,B,math.max(0,Alpha))
		if ALpha==255
			Fnt.Dark(Message,X,Y,2,1)
		Else
			Fnt.Text(Message,X,Y,2,1)
		End
		If noalterations
			Return
		End
		Y--
		If ACD==0
			Alpha--			
		Else
			ACD--
		End			
	End
	
	Constructor(Executor,String _Message,Byte _R,Byte _G,Byte _B)
		R = _R
		G = _G
		B = _B
		Message = _Message
		X = Executor.X
		Y = Executor.Y - 10
		StartY = Y
		Tag = Executor.Tag
	End
	
End
	

Void Put(ch,msg,Byte R=255, Byte G=255, Byte B=255)
	plua ncm
	plua tag
	Switch Lua.type(ch)
		Case "string"
			ncm = New TCharMessage(Fighter.ByTag[ch],Lua.tostring(msg),R,G,B)
			tag = ch
		Default
			ncm = New TCharMessage(ch,Lua.tostring(msg),R,G,B)
			tag = ch.Tag
	End
	register[tag] = register[tag] || {}
	plua ereg;ereg = register[tag]
	ereg[len(ereg)] = ncm
End

Void Draw(noalterations)
	For _,reglist in pairs(register)
		Bool Allow = True
		Table Kill = {}
		For i,cm in spairs(reglist)
			If Allow
				cm.Draw()
				Allow = cm.StartY - cm.Y > 16
			End
			If cm.Alpha<=0
				Kill[len(Kill)]=i
			End
		End
		For i in Each(Kill)
			reglist[i]=nil
		End
	End
End

Void Clear()
	register = {}
End