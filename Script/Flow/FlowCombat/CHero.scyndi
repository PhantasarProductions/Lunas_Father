// License Information:
// src/Scripts/Script/Flow/FlowCombat/CHero.scyndi
// Version: 23.11.14
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
Module

#use "libs/sci/sys"
#use "libs/sci/JCR6"
#use "libs/sci/GINIE"
#use "libs/sci/Graphics"
#use "libs/sci/InterVar"
#use "libs/sci/statistician"

#use "script/use/link/party"

const Int MidY = Graphics.Height div 2
const Int OndH = MidY - 150
const Int OndS = (OndH div 4)

plua HParty = Statistician.Obtain("LUNA_PARTY")

Class Hero
	ReadOnly String Tag
	ReadOnly Var Char
	ReadOnly Var Stat
	ReadOnly String Team = "Hero"
	ReadOnly Bool ShowHPBar = True
	ReadOnly Var Images
	ReadOnly Var ImgIcon
		
	String Pose = "IDLE"
	Int Frame = 0
	
	Bool Guarding = False
	
	Get Int Force
		// Actual code will come later when skills have been added
		return 0
	End
		
	Int DOrder = 0
	
	Get Int PartyPos
		Return Party.PosInParty(Tag)
	End
	
	Get String AudName
		Return Tag
	End
	
	Get String Name
		Return Char.Data.Name
	End
	
	Bool AltCoords = False
	int _AltX
	Int _AltY		
	
	Get Int X
		If AltCoords
			Return _AltX
		End
		return math.floor((Graphics.Width*0.70)+(PartyPos*64))
	End
	
	Set Int X
		AltCoords=True
		_AltX=Value
	End
	
	Get Int Y
		If AltCoords
			Return _AltY
		End
		return math.floor(MidY+(OndS*(PartyPos+1)))
	End
	
	Set Int Y
		AltCoords=True
		_AltY=Value
	End
			
	
	Get Int HP
		Return Char.Points.HP.Have
	End
	Set Int HP
		Char.Points.HP.Have = Value
	End
	Get Int MaxHP
		Return Char.Points.HP.Maximum
	End
	
	Get Bool TargetablePlayer
		Return True
	End
	
	Get Bool TargetableFoe
		Return HP>0
	End
	
	Get Bool Defeated
		Return HP<=0
	End
	
	Get Bool BlockHeal
		Return False
	End
	
	Get Bool Undead
		Return False
	End

	
	Int IRate = 1000
	Get Number Rate
		Switch gint.skill
			Case 1
				Return IRate/800
			Case 2
				Return IRate/1000
			Case 3
				Return IRate/1500
			Default
				Return 0
		End
	End

	
	Void Icon(int icx, int icy)
		ImgIcon.Draw(icx,icy+10)
	End
	
	Get Var GetImage
		// GFX/Combat/Heroes/Myrah.Idle.png
		String GITag; GITag = sprintf("COMBAT::HERO::%s::%s",Tag,Pose)
		if !Images[GITag]
			string PNG; PNG = sprintf("GFX/Combat/Heroes/%s.%s.png",Tag,Pose)
			string BUN; BUN = sprintf("GFX/Combat/Heroes/%s.%s.jpbf",Tag,Pose)
			if JCR6.EntryExists(PNG)
				CSayF("Loading Hero Combat Image: %s",PNG)
				Images[GITag] = LoadNewImage(PNG,GITag)
			else
				CSayF("Loading Hero Combat Image Bundle: %s",BUN)
				Images[GITag] = LoadNewImage(BUN,GITag)
			end
			Images[GITag].Hot(Images[GITag].Width div 2,Images[GITag].Height)
		end
		Return Images[GITag]
	End
		
	Get Int W
		return math.floor(GetImage.Width * 1.5)
	End
	
	Get Int H
		return math.floor(GetImage.Height * 1.5)
	End
	
	Get Int TarX
		return X - (W div 2)
	End
	
	Get Int TarY
		return Y - H
	End
	
	Get Int AtkX 
		Return X-W
	End
	
	const Int PoseSkip = 4
	Int PoseSkipI = 0
	Bool DoPose(string __pose)
		Pose = __Pose
		PoseSkipI = (PoseSkipI+1)%PoseSkip
		if PoseSkipI==0
			Frame++
		End
		Return Frame>=GetImage.Frames
	End

	Void Draw()
		pLua Img; Img = GetImage
		Frame=math.min(Frame,Img.Frames-1)
		SetScale(1.5)
		Img.Draw(X,Y,Frame)
		SetScale(1)
		// TODO: Target information when applicable
	End
	
	Int Resistance(string Element)
		// To do: Alter resistance when equipping skills
		return 0
	End
	
	Number NResistance(string Element)
		number Ret			  
		Ret = Self.Resistance(Element)
		Ret = Ret / 100
		Return Ret
	End
	
	Constructor(string _Tag)
		Tag = _Tag
		Char = HParty.Char[_Tag]
		Stat = Char.Stat
		Images = {}
		ImgIcon = ObtainImage(sprintf("COMBATHEROICON_%s",Upper(_Tag)))
		ImgIcon.Hot(0,ImgIcon.Height)
	End
	
End

Void CompileHero(string Tag)
	CSayF("Compiling hero: %s",Tag)
	plua NH; NH = New Hero(Tag)
	Lua.Scyndi.Class.Fighter.ByTag[Tag] = NH
End