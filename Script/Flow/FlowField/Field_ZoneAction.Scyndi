// License Information:
// src/Scripts/Script/Flow/FlowField/Field_ZoneAction.Scyndi
// Version: 23.10.16
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information
module

#use "Libs/SCI/Sys"
#use "Libs/SCI/JCR6"
#use "Libs/SCI/Kthura"

#use "Script/use/Link/Map"

plua ZATable
plua OldLayer
plua NowIn = {}
//plua Chk = NewArray("Enter","Leave","Cycle")

Bool CEnter(a1,a2)
	return (!a1) && a2
end

bool CLeave(a1,a2)
	return a1 && (!a2)
end

bool CCycle(a1,a2)
	return a1 && a2
end

var Chk
Init
	Chk = { ["Enter"]=CEnter,["Leave"]=CLeave,["Cycle"]=CCycle}
End

void LZA(string mapb)
	CSay("Zone Action")
	string src
	var func	
	src = JCR6.GetString(sprintf("Kthura/%s/ZoneAction.lua",mapb))
	func = Lua.load(src)
	ZATable = func()
	OldLayer = nil
end

plua FField

Init
	FField = Lua.Scyndi.Globals.FlowField
	FField.LMFuncs[len(FField.LMFuncs)] = LZA	
End

void Check_ZoneAction()
	Int X
	Int Y
	if (!Map.HasPlayer)
		Return
	End
	X,Y = Player.X,Player.Y
	if OldLayer!=Kthura.CurrentLayer
		NowIn.Enter = {}
		NowIn.Leave = {}
		NowIn.Cycle = {}
	End
	For CT,CF in pairs(Chk)
		Lua.assert(ZATable[Upper(CT)][Upper(Kthura.CurrentLayer)],sprintf("No Zone Action table for %s:%s",Kthura.CurrentLayer,CT))
		For ObjTag,ActFunc in pairs(ZATable[Upper(CT)][Upper(Kthura.CurrentLayer)])
			If Kthura.HasObj(objtag) 
				If CF(NowIn[ObjTag],Kthura.InObj(ObjTag,x,y))
					Switch Lua.type(ActFunc)
						Case "function"
							ActFunc()
							Return
						case "string"
							MapScript[ActFunc]()							
							Return
						Default
							Lua.error("Zone action function error")
					End
				End
				NowIn[ObjTag]=Kthura.InObj(ObjTag,x,y)
			End
		End
		
	End
End