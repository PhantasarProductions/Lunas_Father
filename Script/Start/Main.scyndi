// License Information:
// src/Scripts/Script/Start/Main.scyndi
// Version: 23.10.12
// Copyright (C) 2023 Jeroen Petrus Broks
// 
// ===========================
// This file is part of a project related to the Phantasar Chronicles or another
// series or saga which is property of Jeroen P. Broks.
// This means that it may contain references to a story-line plus characters
// which are property of Jeroen Broks. These references may only be distributed
// along with an unmodified version of the game.
// 
// As soon as you remove or replace ALL references to the storyline or character
// references, or any termology specifically set up for the Phantasar universe,
// or any other univers a story of Jeroen P. Broks is set up for,
// the restrictions of this file are removed and will automatically become
// zLib licensed (see below).
// 
// Please note that doing so counts as a modification and must be marked as such
// in accordance to the zLib license.
// ===========================
// zLib license terms:
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

Script

#use "Libs/SCI/Sys"
#use "Libs/SCI/Events"
#use "Libs/SCI/Graphics"
#use "Libs/SCI/InterVar"
#use "Libs/SCI/JCR6"
#use "Libs/SCI/GINIE"

#use "Libs/Rosetta"

#use "Script/Use/General/Loading"
#use "Script/Use/Link/MainMenu"

Var CFG

Init
	// Take note of debug situation!
	CSaySetConfig("ALLOW","ALWAYS")
	// Global config
	CSay("Loading Global Config")
	CFG = GINIE.LoadHome("Luna.GlobalConfig.ini","GLOBALCONFIG","Luna.GlobalConfig.ini","Luna's Father - (c) Jeroen P. Broks")
	CSay("Default config")
	CFG.NewValue("Rosetta","Language","English")
	Rosetta.StringsDir="Languages/Game"
End


Var LoadItems
Int ItemCount
Int ItemPos = 0

Get Var Ratio
	return ItemPos / ItemCount
End

Class Litem
	ReadOnly String File
	ReadOnly String Tag
	ReadOnly String ItemType
	ReadOnly Bool Center = False
	
	Constructor(String F,String T,String IT,C)
		File = F
		Tag = T
		ItemType = IT
		Center = C == true
		if (IT=="Image" && Center)
			ItemType="CImage"
		End
		CSayF("%s: %s -> %s",IT,F,ITEMTYPE)
	End
		 
End

Void NImg(string I,string T,center)
	LoadItems[Len(LoadItems)] = New LItem(I,T,"Image",center)
End

Init
	LoadItems = NewArray()
	NImg("GFX/Algemeen/Needle.png","ALG_Needle",true)
	NImg("GFX/Algemeen/Back.png","ALG_BACK")
	NIMG("GFX/Algemeen/Logo.png","ALG_LOGO",true)
	NIMG("GFX/Algemeen/Pointer.png","MOUSEPOINTER")
	NIMG("GFX/Arrows/Left.png","ARROW_LEFT")
	NIMG("GFX/Boxes/BoxBack.png","BOX_BACK")
	NIMG("GFX/Boxes/HP.png","BOX_HP")
	NIMG("GFX/Boxes/FP.png","BOX_FP")
	NIMG("GFX/Boxes/VIT.png","BOX_VIT")
	NIMG("GFX/Arrows/Right.png","ARROW_RIGHT")	
	for i,c in pairs {"Myrah","Francis","Luna","Scyndi","Aziella","Rachel"}
		 NIMG(sprintf("GFX/Portraits/%s/General.png",c),sprintf("PORTRET_%s",upper(c)))
	end
	LoadItems[Len(LoadItems)] = New LItem("FONTS/RYANNA.JFBF","BASE","Font")
	LoadItems[Len(LoadItems)] = New LItem("FONTS/Metal.JFBF","METAL","Font")
	LoadItems[Len(LoadItems)] = New LItem("FONTS/Mini.JFBF","MINI","Font")
	LoadItems[Len(LoadItems)] = New LItem("FONTS/Coolvetica.JFBF","COOL","Font")
	// In basic you can use this font freely for both commercial and free productions. I do recommend though to download this font from dafont.com to have the full font + license files, altogether
	ItemCount = Len(LoadItems)
End

global void MainFlow()
	Cls()
	if Events.AppTerminate() 
		Sys.Exit()
	end
	Loading.Show()
	SetColor(125,125,125)
	Rect(0,Graphics.Height-5,Graphics.Width,5)
	Int G = math.floor(Ratio*255)
	Int W = math.floor(Ratio*Graphics.Width)
	SetColor(255-G,G,0)
	Rect(0,Graphics.Height-5,W,5)
	if ItemPos<ItemCount
		CSayF("Item %d/%d",ItemPos+1,ItemCount)
		Var LI = LoadItems[ItemPos]
		switch LI.ItemType
			case "Image" 
				CSayF("Loading Regular Image: %s",LI.File)
				LoadImage(LI.File,LI.Tag)
			case "CImage"
				CSayF("Loading Centered Image: %s",LI.File)
				LoadImage(LI.File,LI.Tag).HotCenter()
			case "Font"
				CSayF("Linking Image Font: %s",LI.File)
				LinkFont(LI.File,LI.Tag)
			default
				Lua.error(sprintf("How do I load a %s? (%s -> %s)",LI.ItemType,LI.File,LI.Tag))
		End
		ItemPos++
	Else
		MainMenu.Go()
	End
	//Mouse.Show()
End